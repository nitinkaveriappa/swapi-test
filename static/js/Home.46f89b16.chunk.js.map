{"version":3,"sources":["SWAPI/index.js","Home/Components/Home.js","Home/index.js"],"names":["URL","process","searchAllPeople","username","cancelToken","a","URI","concat","axios","get","data","searchAllPlanets","hitPlanetSearchUrl","url","Home","history","useHistory","signal","CancelToken","source","useState","searchValue","setSearchValue","searchData","setSearchData","error","setError","searchCount","setSearchCount","useEffect","searchInterval","setInterval","console","log","document","title","clearInterval","cancel","processData","results","map","orderBy","o","toNumber","population","value","isSelected","checkLogin","token","response","count","hitUrl","handlePagination","replace","localStorage","getItem","Grid","container","spacing","item","xs","sm","Typography","color","TextField","type","id","label","placeholder","name","fullWidth","onChange","e","obj","prevData","target","disabled","required","InputLabelProps","shrink","Button","variant","onClick","clear","push","length","idx","key","Card","style","width","height","index","CardContent","startCase","previous","next"],"mappings":"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","file":"static/js/Home.46f89b16.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = process.env.REACT_APP_SWAPI_URL;\r\n\r\nconst searchAllPeople = async (username, cancelToken) => {\r\n  const URI = URL.concat(`/people/?search=${username}`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst searchAllPlanets = async (username, cancelToken) => {\r\n  const URI = URL.concat(`/planets/?search=${username}`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst hitPlanetSearchUrl = async (url, cancelToken) => {\r\n  try {\r\n    const { data } = await axios.get(url, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport { searchAllPeople, searchAllPlanets, hitPlanetSearchUrl };\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { map, orderBy, toNumber, startCase, replace } from 'lodash';\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  CardContent,\r\n} from '@material-ui/core';\r\nimport { searchAllPlanets, hitPlanetSearchUrl } from '../../SWAPI';\r\n\r\nconst Home = () => {\r\n  let history = useHistory();\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [searchCount, setSearchCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const searchInterval = setInterval(function () {\r\n      setSearchCount(0);\r\n      setError(false);\r\n      console.log('Boom Interval');\r\n    }, 60000);\r\n    document.title = `Home | Swapi App`;\r\n    return () => {\r\n      clearInterval(searchInterval);\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const processData = (data) => {\r\n    const results = map(\r\n      orderBy(\r\n        data.results,\r\n        [\r\n          (o) => {\r\n            return toNumber(o.population);\r\n          },\r\n        ],\r\n        ['asc']\r\n      ),\r\n      (value) => ({ ...value, isSelected: false })\r\n    );\r\n    console.log({ results });\r\n    return { ...data, results };\r\n  };\r\n\r\n  const checkLogin = async (searchValue) => {\r\n    try {\r\n      const response = await searchAllPlanets(searchValue, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        const data = processData(response);\r\n        setSearchData({ ...data });\r\n      } else {\r\n        // setError(true);\r\n        setSearchData({});\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const obj = localStorage.getItem('userName');\r\n    console.log({ obj });\r\n    if (\r\n      !(\r\n        localStorage.getItem('userName') &&\r\n        localStorage.getItem('userName') === 'Luke Skywalker'\r\n      ) &&\r\n      searchCount >= 15\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      setSearchCount((prevData) => ++prevData);\r\n      setSearchValue(e.target.value);\r\n      checkLogin(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    history.push('/login');\r\n  };\r\n\r\n  const hitUrl = async (url) => {\r\n    try {\r\n      const response = await hitPlanetSearchUrl(url, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        const data = processData(response);\r\n        setSearchData({ ...data });\r\n      } else {\r\n        // setError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handlePagination = (url) => {\r\n    hitUrl(replace(url, 'http', 'https'));\r\n  };\r\n\r\n  const handleCardClick = (index) => {\r\n    console.log('handleCardClick', index);\r\n\r\n    setSearchData((prevData) => {\r\n      const results = map(prevData.results, (value, idx) => {\r\n        if (index === idx) {\r\n          return { ...value, isSelected: !value.isSelected };\r\n        } else {\r\n          return { ...value, isSelected: false };\r\n        }\r\n      });\r\n      return { ...prevData, results };\r\n    });\r\n  };\r\n\r\n  console.log(\r\n    { searchData, searchCount },\r\n    localStorage.getItem('userName') === 'Luke Skywalker'\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        {error && (\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography color=\"error\">Wait for 1 Minute</Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={10}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            disabled={error}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Grid>\r\n        {searchData.results && searchData.results.length > 0 ? (\r\n          <>\r\n            {map(searchData.results, (data, idx) => (\r\n              <Grid key={idx + 1} item>\r\n                <Card\r\n                  variant=\"outlined\"\r\n                  style={\r\n                    data.isSelected\r\n                      ? {\r\n                          width: '500px',\r\n                          height: '500px',\r\n                        }\r\n                      : {\r\n                          width: `${200 + 15 * idx}px`,\r\n                          height: `${200 + 15 * idx}px`,\r\n                        }\r\n                  }\r\n                  onClick={() => handleCardClick(idx)}\r\n                >\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\">{data.name}</Typography>\r\n                    {data.isSelected &&\r\n                      map(data, (value, key) => (\r\n                        <Typography variant=\"body1\">\r\n                          {`${startCase(key)} : ${value}`}\r\n                        </Typography>\r\n                      ))}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {(searchData.previous || searchData.next) && (\r\n              <>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handlePagination(searchData.previous)}\r\n                  disabled={!searchData.previous}\r\n                >\r\n                  Prev\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handlePagination(searchData.next)}\r\n                  disabled={!searchData.next}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Typography>No Search Results</Typography>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from './Components/Home';\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}