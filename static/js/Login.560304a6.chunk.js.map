{"version":3,"sources":["SWAPI/index.js","Login/Components/Login.js","Login/Constants/Login_Constants.js","Login/index.js"],"names":["URL","process","searchAllPeople","username","cancelToken","a","URI","concat","axios","get","data","searchAllPlanets","hitPlanetSearchUrl","url","Login","signal","CancelToken","source","history","useHistory","useState","passwordVisibility","setPasswordVisibility","errors","setErrors","invalidError","setInvalidError","isLoggingIn","setLoggingIn","loginData","setLoginData","useEffect","document","title","cancel","handleChange","name","e","prevErrors","target","value","checkLogin","token","response","console","log","count","results","birth_year","localStorage","setItem","push","Box","style","position","left","top","transform","Grid","container","spacing","item","xs","sm","Typography","color","TextField","type","id","label","placeholder","fullWidth","onChange","disabled","required","InputLabelProps","shrink","error","helperText","InputProps","endAdornment","InputAdornment","IconButton","aria-label","onClick","prevStateValue","Visibility","VisibilityOff","Button","variant","keys","length"],"mappings":"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","file":"static/js/Login.560304a6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = process.env.REACT_APP_SWAPI_URL;\r\n\r\nconst searchAllPeople = async (username, cancelToken) => {\r\n  const URI = URL.concat(`/people/?search=${username}`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst searchAllPlanets = async (username, cancelToken) => {\r\n  const URI = URL.concat(`/planets/?search=${username}`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst hitPlanetSearchUrl = async (url, cancelToken) => {\r\n  try {\r\n    const { data } = await axios.get(url, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport { searchAllPeople, searchAllPlanets, hitPlanetSearchUrl };\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport keys from 'lodash/keys';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { USERNAME, PASSWORD } from '../Constants/Login_Constants';\r\nimport { searchAllPeople } from '../../SWAPI';\r\n\r\nconst Login = () => {\r\n  const signal = axios.CancelToken.source();\r\n  let history = useHistory();\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [invalidError, setInvalidError] = useState(false);\r\n  const [isLoggingIn, setLoggingIn] = useState(false);\r\n  const [loginData, setLoginData] = useState({\r\n    [USERNAME]: '',\r\n    [PASSWORD]: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    return () => {\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const handlePasswordVisibility = () => {\r\n    setPasswordVisibility((prevStateValue) => {\r\n      return !prevStateValue;\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setErrors((prevErrors) => {\r\n      delete prevErrors[name];\r\n      return { ...prevErrors };\r\n    });\r\n    setInvalidError(false);\r\n    setLoginData({ ...loginData, [name]: e.target.value });\r\n  };\r\n\r\n  const checkLogin = async () => {\r\n    setLoggingIn(true);\r\n\r\n    try {\r\n      const response = await searchAllPeople(loginData[USERNAME], signal.token);\r\n      console.log(response);\r\n      if (\r\n        response &&\r\n        response.count === 1 &&\r\n        response.results[0].name === loginData[USERNAME] &&\r\n        response.results[0].birth_year === loginData[PASSWORD]\r\n      ) {\r\n        console.log('Login Successful', response.results[0]);\r\n        localStorage.setItem('userName', response.results[0].name);\r\n        history.push('/home');\r\n      } else {\r\n        setInvalidError(true);\r\n        setLoginData({ [USERNAME]: '', [PASSWORD]: '' });\r\n      }\r\n      setLoggingIn(false);\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    console.log('Login');\r\n    // checkFormValidity(loginData, errors);\r\n    // console.log(errors);\r\n    if (keys(errors).length === 0) {\r\n      checkLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        {invalidError && (\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography color=\"error\">Invalid Credentials</Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"username\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            name=\"Username\"\r\n            fullWidth\r\n            value={loginData[USERNAME]}\r\n            onChange={handleChange(USERNAME)}\r\n            disabled={isLoggingIn}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            error={!!errors[USERNAME]}\r\n            helperText={errors[USERNAME]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type={passwordVisibility ? 'text' : 'password'}\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            value={loginData[PASSWORD]}\r\n            onChange={handleChange(PASSWORD)}\r\n            disabled={isLoggingIn}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            error={!!errors[PASSWORD]}\r\n            helperText={errors[PASSWORD]}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"Toggle password visibility\"\r\n                    onClick={() => handlePasswordVisibility()}\r\n                  >\r\n                    {passwordVisibility ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleLogin}\r\n            disabled={isLoggingIn}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export const USERNAME = 'username';\r\nexport const PASSWORD = 'password';\r\n","import Login from './Components/Login';\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}