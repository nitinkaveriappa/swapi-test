{"version":3,"sources":["SWAPI/index.js","Home/Components/Home.js","Home/index.js"],"names":["URL","process","searchAllPeople","username","cancelToken","a","URI","concat","axios","get","data","searchAllPlanets","Home","signal","CancelToken","source","useState","searchValue","setSearchValue","searchData","setSearchData","setError","useEffect","document","title","chart","dispose","cancel","processData","res","orderBy","console","log","checkLogin","token","response","count","results","Grid","container","spacing","item","xs","sm","TextField","type","id","label","placeholder","name","fullWidth","value","onChange","e","target","required","InputLabelProps","shrink","map","idx","key","Card","variant","style","width","height","CardContent","Typography"],"mappings":"qOAEMA,EAAMC,wBAENC,EAAe,uCAAG,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,6DAChBC,EAAMN,EAAIO,OAAJ,0BAA8BJ,IADpB,kBAGGK,IAAMC,IAAIH,EAAK,CACpCF,gBAJkB,uBAGZM,EAHY,EAGZA,KAHY,kBAMbA,GANa,wHAAH,wDAYfC,EAAgB,uCAAG,WAAOR,EAAUC,GAAjB,mBAAAC,EAAA,6DACjBC,EAAMN,EAAIO,OAAJ,2BAA+BJ,IADpB,kBAGEK,IAAMC,IAAIH,EAAK,CACpCF,gBAJmB,uBAGbM,EAHa,EAGbA,KAHa,kBAMdA,GANc,wHAAH,yD,8NC+EPE,EAlFF,WACX,IAAMC,EAASL,IAAMM,YAAYC,SADhB,EAEqBC,mBAAS,IAF9B,mBAEVC,EAFU,KAEGC,EAFH,OAGmBF,mBAAS,IAH5B,mBAGVG,EAHU,KAGEC,EAHF,OAISJ,oBAAS,GAJlB,mBAIHK,GAJG,WAMjBC,qBAAU,WAER,OADAC,SAASC,MAAT,oBACO,WACD,EAAKC,OACP,EAAKA,MAAMC,UAEbb,EAAOc,OAAO,wBAEf,IAEH,IAAMC,EAAc,SAAClB,GACnB,IAAMmB,EAAMC,IAAQpB,EAAM,CAAC,cAAe,CAAC,SAE3C,OADAqB,QAAQC,IAAI,CAAEH,QACPA,GAGHI,EAAU,uCAAG,WAAOhB,GAAP,eAAAZ,EAAA,+EAEQM,YAAiBM,EAAaJ,EAAOqB,OAF7C,OAETC,EAFS,OAGfJ,QAAQC,IAAIG,GACRA,GAAYA,EAASC,MAAQ,GAC/BL,QAAQC,IAAI,oBAAqBG,EAASE,SAC7BT,EAAYO,EAASE,SAClCjB,EAAc,YAAIe,EAASE,YAE3BhB,GAAS,GACTD,EAAc,KAVD,gDAafW,QAAQC,IAAI,YAAZ,MAbe,yDAAH,sDAwBhB,OAFAD,QAAQC,IAAIb,GAGV,oCACE,kBAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,GAAG,kBACHC,MAAM,eACNC,YAAY,iBACZC,KAAK,eACLC,WAAS,EACTC,MAAOlC,EACPmC,SAnBW,SAACC,GACpBnC,EAAemC,EAAEC,OAAOH,OACxBlB,EAAWoB,EAAEC,OAAOH,QAkBZI,UAAQ,EACRC,gBAAiB,CACfC,QAAQ,MAIbC,IAAIvC,GAAY,SAACT,EAAMiD,GAAP,OACf,kBAACrB,EAAA,EAAD,CAAMsB,IAAKD,EAAM,EAAGlB,MAAI,GACtB,kBAACoB,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAO,CAAEC,MAAO,QAASC,OAAQ,UAEjC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAazD,EAAKuC,eCnFnBrC","file":"static/js/Home.e05f2801.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = process.env.REACT_APP_SWAPI_URL;\r\n\r\nconst searchAllPeople = async (username, cancelToken) => {\r\n  const URI = URL.concat(`/people/?search=${username}`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst searchAllPlanets = async (username, cancelToken) => {\r\n  const URI = URL.concat(`/planets/?search=${username}`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport { searchAllPeople, searchAllPlanets };\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport map from 'lodash/map';\r\nimport orderBy from 'lodash/orderBy';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  TextField,\r\n  Typography,\r\n  CardContent,\r\n} from '@material-ui/core';\r\nimport { searchAllPlanets } from '../../SWAPI';\r\n\r\nconst Home = () => {\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    return () => {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const processData = (data) => {\r\n    const res = orderBy(data, ['population'], ['desc']);\r\n    console.log({ res });\r\n    return res;\r\n  };\r\n\r\n  const checkLogin = async (searchValue) => {\r\n    try {\r\n      const response = await searchAllPlanets(searchValue, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        const data = processData(response.results);\r\n        setSearchData([...response.results]);\r\n      } else {\r\n        setError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchValue(e.target.value);\r\n    checkLogin(e.target.value);\r\n  };\r\n\r\n  console.log(searchData);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={10}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        {map(searchData, (data, idx) => (\r\n          <Grid key={idx + 1} item>\r\n            <Card\r\n              variant=\"outlined\"\r\n              style={{ width: '200px', height: '200px' }}\r\n            >\r\n              <CardContent>\r\n                <Typography>{data.name}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from './Components/Home';\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}