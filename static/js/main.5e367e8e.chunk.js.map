{"version":3,"sources":["Routes.js","App.js","index.js"],"names":["Login","lazy","Routes","fallback","exact","path","process","render","to","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"8MASMA,EAAQC,gBAAK,kBAAM,gCAkCVC,EAvBA,kBACb,kBAAC,IAAD,KAEE,kBAAC,WAAD,CAAUC,SAAU,mDAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAMC,eACNC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIF,yBAE9B,kBAAC,IAAD,CACEF,OAAK,EACLC,KAAMC,oBACNC,OAAQ,kBAAM,kBAACP,EAAD,aCtBTS,EARH,WACV,OACE,oCACE,kBAAC,EAAD,QCDNC,IAASH,OACP,kBAAC,IAAMI,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5e367e8e.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  HashRouter,\r\n} from 'react-router-dom';\r\n\r\nconst Login = lazy(() => import(/* webpackChunkName: \"Login\" */ './Login'));\r\n\r\n// const NoMatch = lazy(() => import('./NoMatch'));\r\n\r\n/* Using HashRouter because GitHub Pages doesnâ€™t support routers \r\nthat use the HTML5 `pushState` history API under the hood \r\n(for example, React Router using `browserHistory`). \r\nThis is because when there is a fresh page load for a url like \r\n`http://user.github.io/todomvc/todos/42`, where `/todos/42` is a frontend route, \r\nthe GitHub Pages server returns 404 because it knows nothing of `/todos/42`.\r\n*/\r\nconst Routes = () => (\r\n  <Router>\r\n    {/* <HashRouter> */}\r\n    <Suspense fallback={<>Loading...</>}>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + '/'}\r\n          render={() => <Redirect to={process.env.PUBLIC_URL + '/login'} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + '/login'}\r\n          render={() => <Login />}\r\n        />\r\n\r\n        {/* <Route component={NoMatch} /> */}\r\n      </Switch>\r\n    </Suspense>\r\n    {/* </HashRouter> */}\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './Routes';\n\nconst App = () => {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}