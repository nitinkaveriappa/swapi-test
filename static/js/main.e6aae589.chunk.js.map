{"version":3,"sources":["Routes.js","App.js","index.js"],"names":["Login","lazy","Routes","fallback","exact","path","render","to","App","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"6MAQMA,EAAQC,gBAAK,kBAAM,gCAiBVC,EAbA,kBACb,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,mDAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAG,cACjD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,kBAACN,EAAD,aCNlCQ,EARH,WACV,OACE,oCACE,kBAAC,EAAD,QCANC,IAASH,OACP,kBAAC,IAAMI,WAAP,KACE,kBAAC,IAAD,CAAQC,SAAS,OACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.e6aae589.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nconst Login = lazy(() => import(/* webpackChunkName: \"Login\" */ './Login'));\r\n\r\n// const NoMatch = lazy(() => import('./NoMatch'));\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <Suspense fallback={<>Loading...</>}>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n        <Route exact path=\"/login\" render={() => <Login />} />\r\n\r\n        {/* <Route component={NoMatch} /> */}\r\n      </Switch>\r\n    </Suspense>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './Routes';\n\nconst App = () => {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/8d\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}