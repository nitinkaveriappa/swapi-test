{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Button, TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\nconst Login = () => {\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\n  useEffect(() => {\n    document.title = `Login | Swapi App`;\n  }, []);\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisibility(prevStateValue => {\n      return !prevStateValue;\n    });\n  };\n\n  const handleLogin = () => {\n    console.log('Login');\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"username\",\n    id: \"username\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    name: \"Username\",\n    fullWidth: true // value={loginData[EMAIL]}\n    // onChange={handleChange(EMAIL)}\n    // disabled={isLoggingIn}\n    ,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    } // error={!!errors.email}\n    // helperText={errors.email}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: passwordVisibility ? 'text' : 'password',\n    id: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    fullWidth: true // value={loginData[EMAIL]}\n    // onChange={handleChange(EMAIL)}\n    // disabled={isLoggingIn}\n    ,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    } // error={!!errors.email}\n    // helperText={errors.email}\n    ,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"Toggle password visibility\",\n        onClick: () => handlePasswordVisibility(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, passwordVisibility ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 43\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 60\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Login.js"],"names":["React","useState","useEffect","Box","Grid","Button","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","Login","passwordVisibility","setPasswordVisibility","document","title","handlePasswordVisibility","prevStateValue","handleLogin","console","log","position","left","top","transform","shrink","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nconst Login = () => {\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n  }, []);\r\n\r\n  const handlePasswordVisibility = () => {\r\n    setPasswordVisibility((prevStateValue) => {\r\n      return !prevStateValue;\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    console.log('Login');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"username\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            name=\"Username\"\r\n            fullWidth\r\n            // value={loginData[EMAIL]}\r\n            // onChange={handleChange(EMAIL)}\r\n            // disabled={isLoggingIn}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            // error={!!errors.email}\r\n            // helperText={errors.email}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type={passwordVisibility ? 'text' : 'password'}\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            // value={loginData[EMAIL]}\r\n            // onChange={handleChange(EMAIL)}\r\n            // disabled={isLoggingIn}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            // error={!!errors.email}\r\n            // helperText={errors.email}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"Toggle password visibility\"\r\n                    onClick={() => handlePasswordVisibility()}\r\n                  >\r\n                    {passwordVisibility ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}