{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Home\\\\Components\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport map from 'lodash/map';\nimport { Grid, Paper, TextField } from '@material-ui/core';\nimport { searchAllPlanets } from '../../SWAPI';\n\nconst Home = () => {\n  const signal = axios.CancelToken.source();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchData, setSearchData] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    document.title = `Login | Swapi App`;\n    return () => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n\n      signal.cancel('Request Cancelled');\n    };\n  }, []);\n\n  const checkLogin = async searchValue => {\n    try {\n      const response = await searchAllPlanets(searchValue, signal.token);\n      console.log(response);\n\n      if (response && response.count > 0) {\n        console.log('Search Successful', response.results);\n        setSearchData([...response.results]);\n      } else {\n        setError(true);\n        setSearchData([]);\n      }\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    checkLogin(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"search\",\n    id: \"standard-search\",\n    label: \"Search Field\",\n    placeholder: \"Type to Search\",\n    name: \"Search Field\",\n    fullWidth: true,\n    value: searchValue,\n    onChange: handleSearch,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, map(searchData, data => /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, data.name)))));\n};\n\nexport default Home;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Home/Components/Home.js"],"names":["React","useState","useEffect","axios","map","Grid","Paper","TextField","searchAllPlanets","Home","signal","CancelToken","source","searchValue","setSearchValue","searchData","setSearchData","error","setError","document","title","chart","dispose","cancel","checkLogin","response","token","console","log","count","results","handleSearch","e","target","value","shrink","data","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport map from 'lodash/map';\r\nimport { Grid, Paper, TextField } from '@material-ui/core';\r\nimport { searchAllPlanets } from '../../SWAPI';\r\n\r\nconst Home = () => {\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    return () => {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const checkLogin = async (searchValue) => {\r\n    try {\r\n      const response = await searchAllPlanets(searchValue, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        setSearchData([...response.results]);\r\n      } else {\r\n        setError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchValue(e.target.value);\r\n    checkLogin(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          {map(searchData, (data) => (\r\n            <Paper>{data.name}</Paper>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}