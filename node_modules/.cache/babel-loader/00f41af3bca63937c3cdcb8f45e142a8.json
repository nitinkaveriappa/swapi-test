{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Home\\\\Components\\\\Home.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Grid, TextField } from '@material-ui/core';\nimport { searchAllPlanets } from '../../SWAPI';\n\nconst Home = () => {\n  const signal = axios.CancelToken.source();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchData, setSearchData] = useState([]);\n\n  const checkLogin = async () => {\n    try {\n      const response = await searchAllPlanets(loginData[USERNAME], signal.token);\n      console.log(response);\n\n      if (response && response.count > 0) {\n        console.log('Search Successful', response.results);\n        setSearchData([...response.results]);\n      } else {\n        setInvalidError(true);\n        setSearchData([]);\n      }\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"search\",\n    id: \"standard-search\",\n    label: \"Search Field\",\n    placeholder: \"Type to Search\",\n    name: \"Search Field\",\n    fullWidth: true,\n    value: searchValue,\n    onChange: handleSearch,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Home/Components/Home.js"],"names":["React","useState","axios","Grid","TextField","searchAllPlanets","Home","signal","CancelToken","source","searchValue","setSearchValue","searchData","setSearchData","checkLogin","response","loginData","USERNAME","token","console","log","count","results","setInvalidError","error","handleSearch","e","target","value","shrink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AACA,SAASC,gBAAT,QAAiC,aAAjC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGL,KAAK,CAACM,WAAN,CAAkBC,MAAlB,EAAf;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMa,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,gBAAgB,CACrCW,SAAS,CAACC,QAAD,CAD4B,EAErCV,MAAM,CAACW,KAF8B,CAAvC;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,UAAIA,QAAQ,IAAIA,QAAQ,CAACM,KAAT,GAAiB,CAAjC,EAAoC;AAClCF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,QAAQ,CAACO,OAA1C;AACAT,QAAAA,aAAa,CAAC,CAAC,GAAGE,QAAQ,CAACO,OAAb,CAAD,CAAb;AACD,OAHD,MAGO;AACLC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAV,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KAbD,CAaE,OAAOW,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,KAAzB;AACD;AACF,GAjBD;;AAmBA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1Bf,IAAAA,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,iBAFL;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,IAAA,IAAI,EAAC,cALP;AAME,IAAA,SAAS,MANX;AAOE,IAAA,KAAK,EAAElB,WAPT;AAQE,IAAA,QAAQ,EAAEe,YARZ;AASE,IAAA,QAAQ,MATV;AAUE,IAAA,eAAe,EAAE;AACfI,MAAAA,MAAM,EAAE;AADO,KAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAsBD,CAlDD;;AAoDA,eAAevB,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { searchAllPlanets } from '../../SWAPI';\r\n\r\nconst Home = () => {\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState([]);\r\n\r\n  const checkLogin = async () => {\r\n    try {\r\n      const response = await searchAllPlanets(\r\n        loginData[USERNAME],\r\n        signal.token\r\n      );\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        setSearchData([...response.results]);\r\n      } else {\r\n        setInvalidError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}