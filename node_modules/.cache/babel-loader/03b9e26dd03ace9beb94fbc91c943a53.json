{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Home\\\\Components\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport map from 'lodash/map';\nimport { Grid, TextField } from '@material-ui/core';\nimport { searchAllPlanets } from '../../SWAPI';\n\nconst Home = () => {\n  const signal = axios.CancelToken.source();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchData, setSearchData] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    document.title = `Login | Swapi App`;\n    return () => {\n      signal.cancel('Request Cancelled');\n    };\n  }, []);\n\n  loadChart = chartData => {\n    const {\n      i18n\n    } = this.props;\n\n    if (chartData.length) {\n      const chart = am4core.create('causeCode', am4charts.TreeMap);\n      chart.hiddenState.properties.opacity = 0; // Add data\n\n      chart.data = chartData;\n      chart.colors.step = 2;\n      chart.dataFields.value = 'value';\n      chart.dataFields.name = 'name';\n      chart.dataFields.children = 'children';\n      chart.layoutAlgorithm = chart.binaryTree;\n      chart.zoomable = false;\n      const bgColor = new am4core.InterfaceColorSet().getFor('background');\n      const level0SeriesTemplate = chart.seriesTemplates.create('0');\n      const level0ColumnTemplate = level0SeriesTemplate.columns.template;\n      level0ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\n      level0ColumnTemplate.fillOpacity = 0;\n      level0ColumnTemplate.strokeWidth = 0;\n      level0ColumnTemplate.strokeOpacity = 0; // level 1 series template\n\n      const level1SeriesTemplate = chart.seriesTemplates.create('1');\n      const level1ColumnTemplate = level1SeriesTemplate.columns.template;\n      level1SeriesTemplate.tooltip.animationDuration = 0;\n      level1SeriesTemplate.strokeOpacity = 1;\n      level1ColumnTemplate.tooltipText = `${i18n.label('dash.causeCategory', 'Cause Cateogry')}: {parentName} \n    ${i18n.label('dash.causeDescription', 'Cause Description')}: {name}\n    ${i18n.label('dash.count', 'Count')}: {value}`;\n      level1ColumnTemplate.column.cornerRadius(0);\n      level1ColumnTemplate.fillOpacity = 1;\n      level1ColumnTemplate.strokeWidth = 4;\n      level1ColumnTemplate.stroke = bgColor;\n      const bullet1 = level1SeriesTemplate.bullets.push(new am4charts.LabelBullet());\n      bullet1.locationY = 0.5;\n      bullet1.locationX = 0.5;\n      bullet1.label.text = `{name}`;\n      bullet1.label.fill = bgColor;\n      chart.maxLevels = 2;\n      level1ColumnTemplate.events.on('hit', event => {\n        const chartBlockData = event.target.dataItem.treeMapDataItem.dataContext;\n        this.handleClick(chartBlockData);\n      });\n      bullet1.events.on('hit', event => {\n        const chartBlockData = event.target.dataItem.treeMapDataItem.dataContext;\n        this.handleClick(chartBlockData);\n      });\n      chart.legend = new am4charts.Legend();\n    }\n  };\n\n  const checkLogin = async searchValue => {\n    try {\n      const response = await searchAllPlanets(searchValue, signal.token);\n      console.log(response);\n\n      if (response && response.count > 0) {\n        console.log('Search Successful', response.results);\n        setSearchData([...response.results]);\n      } else {\n        setError(true);\n        setSearchData([]);\n      }\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    checkLogin(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"search\",\n    id: \"standard-search\",\n    label: \"Search Field\",\n    placeholder: \"Type to Search\",\n    name: \"Search Field\",\n    fullWidth: true,\n    value: searchValue,\n    onChange: handleSearch,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, map(searchData, data => /*#__PURE__*/React.createElement(React.Fragment, null, data.name, \"\\xA0\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"causeCode\",\n    style: searchData.length === 0 ? {\n      display: 'none'\n    } : {\n      width: '100%',\n      height: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Home/Components/Home.js"],"names":["React","useState","useEffect","axios","map","Grid","TextField","searchAllPlanets","Home","signal","CancelToken","source","searchValue","setSearchValue","searchData","setSearchData","error","setError","document","title","cancel","loadChart","chartData","i18n","props","length","chart","am4core","create","am4charts","TreeMap","hiddenState","properties","opacity","data","colors","step","dataFields","value","name","children","layoutAlgorithm","binaryTree","zoomable","bgColor","InterfaceColorSet","getFor","level0SeriesTemplate","seriesTemplates","level0ColumnTemplate","columns","template","column","cornerRadius","fillOpacity","strokeWidth","strokeOpacity","level1SeriesTemplate","level1ColumnTemplate","tooltip","animationDuration","tooltipText","label","stroke","bullet1","bullets","push","LabelBullet","locationY","locationX","text","fill","maxLevels","events","on","event","chartBlockData","target","dataItem","treeMapDataItem","dataContext","handleClick","legend","Legend","checkLogin","response","token","console","log","count","results","handleSearch","e","shrink","display","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport map from 'lodash/map';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { searchAllPlanets } from '../../SWAPI';\r\n\r\nconst Home = () => {\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    return () => {\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  loadChart = (chartData) => {\r\n    const { i18n } = this.props;\r\n    if (chartData.length) {\r\n      const chart = am4core.create('causeCode', am4charts.TreeMap);\r\n      chart.hiddenState.properties.opacity = 0;\r\n\r\n      // Add data\r\n      chart.data = chartData;\r\n\r\n      chart.colors.step = 2;\r\n\r\n      chart.dataFields.value = 'value';\r\n      chart.dataFields.name = 'name';\r\n      chart.dataFields.children = 'children';\r\n      chart.layoutAlgorithm = chart.binaryTree;\r\n\r\n      chart.zoomable = false;\r\n\r\n      const bgColor = new am4core.InterfaceColorSet().getFor('background');\r\n\r\n      const level0SeriesTemplate = chart.seriesTemplates.create('0');\r\n      const level0ColumnTemplate = level0SeriesTemplate.columns.template;\r\n\r\n      level0ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\r\n      level0ColumnTemplate.fillOpacity = 0;\r\n      level0ColumnTemplate.strokeWidth = 0;\r\n      level0ColumnTemplate.strokeOpacity = 0;\r\n\r\n      // level 1 series template\r\n      const level1SeriesTemplate = chart.seriesTemplates.create('1');\r\n      const level1ColumnTemplate = level1SeriesTemplate.columns.template;\r\n\r\n      level1SeriesTemplate.tooltip.animationDuration = 0;\r\n      level1SeriesTemplate.strokeOpacity = 1;\r\n\r\n      level1ColumnTemplate.tooltipText = `${i18n.label(\r\n        'dash.causeCategory',\r\n        'Cause Cateogry'\r\n      )}: {parentName} \r\n    ${i18n.label('dash.causeDescription', 'Cause Description')}: {name}\r\n    ${i18n.label('dash.count', 'Count')}: {value}`;\r\n      level1ColumnTemplate.column.cornerRadius(0);\r\n      level1ColumnTemplate.fillOpacity = 1;\r\n      level1ColumnTemplate.strokeWidth = 4;\r\n      level1ColumnTemplate.stroke = bgColor;\r\n\r\n      const bullet1 = level1SeriesTemplate.bullets.push(\r\n        new am4charts.LabelBullet()\r\n      );\r\n      bullet1.locationY = 0.5;\r\n      bullet1.locationX = 0.5;\r\n      bullet1.label.text = `{name}`;\r\n      bullet1.label.fill = bgColor;\r\n\r\n      chart.maxLevels = 2;\r\n\r\n      level1ColumnTemplate.events.on('hit', (event) => {\r\n        const chartBlockData =\r\n          event.target.dataItem.treeMapDataItem.dataContext;\r\n        this.handleClick(chartBlockData);\r\n      });\r\n\r\n      bullet1.events.on('hit', (event) => {\r\n        const chartBlockData =\r\n          event.target.dataItem.treeMapDataItem.dataContext;\r\n        this.handleClick(chartBlockData);\r\n      });\r\n\r\n      chart.legend = new am4charts.Legend();\r\n    }\r\n  };\r\n\r\n  const checkLogin = async (searchValue) => {\r\n    try {\r\n      const response = await searchAllPlanets(searchValue, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        setSearchData([...response.results]);\r\n      } else {\r\n        setError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchValue(e.target.value);\r\n    checkLogin(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          {map(searchData, (data) => (\r\n            <>{data.name}&nbsp;</>\r\n          ))}\r\n          <div\r\n            id=\"causeCode\"\r\n            style={\r\n              searchData.length === 0\r\n                ? { display: 'none' }\r\n                : { width: '100%', height: '500px' }\r\n            }\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}