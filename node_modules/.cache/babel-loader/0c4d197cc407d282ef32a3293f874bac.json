{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Routes.js\";\nimport React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport ErrorComponent from './Common/Components/ErrorComponent';\nconst Login = lazy(() => import(\n/* webpackChunkName: \"Login\" */\n'./Login'));\nconst Home = lazy(() => import(\n/* webpackChunkName: \"Home\" */\n'./Home')); // const NoMatch = lazy(() => import('./NoMatch'));\n\nexport const checkUserLoggedIn = () => !!localStorage.getItem('userData');\n\nconst AuthRoute = ({\n  component: Component,\n  allowedFor = [],\n  ...rest\n}) => {\n  console.log(checkUserLoggedIn());\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => checkUserLoggedIn() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(ErrorComponent, {\n      errorMessage: \"Access denied\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n};\n/* Using HashRouter because GitHub Pages doesn’t support routers \r\nthat use the HTML5 `pushState` history API under the hood \r\n(for example, React Router using `browserHistory`) so if you refresh the \r\nBrowser Page it gives a 404 Error page. \r\nThis is because when there is a fresh page load for a url like \r\n`http://user.github.io/todomvc/todos/42`, where `/todos/42` is a frontend route, \r\nthe GitHub Pages server returns 404 because it knows nothing of `/todos/42`.\r\n*/\n\n\nconst Routes = () => /*#__PURE__*/React.createElement(HashRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Suspense, {\n  fallback: /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading...\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  render: () => /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(AuthRoute, {\n  exact: true,\n  path: \"/login\",\n  component: Login,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(AuthRoute, {\n  exact: true,\n  path: \"/home\",\n  component: Home,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}))));\n\nexport default Routes;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Routes.js"],"names":["React","Suspense","lazy","Route","Switch","Redirect","HashRouter","ErrorComponent","Login","Home","checkUserLoggedIn","localStorage","getItem","AuthRoute","component","Component","allowedFor","rest","console","log","props","Routes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,KAAK,GAAGN,IAAI,CAAC,MAAM;AAAO;AAAgC,SAAvC,CAAP,CAAlB;AAEA,MAAMO,IAAI,GAAGP,IAAI,CAAC,MAAM;AAAO;AAA+B,QAAtC,CAAP,CAAjB,C,CAEA;;AAEA,OAAO,MAAMQ,iBAAiB,GAAG,MAAM,CAAC,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAlC;;AAEP,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAU,GAAG,EAArC;AAAyC,KAAGC;AAA5C,CAAD,KAAwD;AACxEC,EAAAA,OAAO,CAACC,GAAR,CAAYT,iBAAiB,EAA7B;AACA,sBACE,oBAAC,KAAD,oBACMO,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IACNV,iBAAiB,kBACf,oBAAC,SAAD,oBAAeU,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADe,gBAGf,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAC,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAdD;AAgBA;;;;;;;;;;AAQA,MAAMC,MAAM,GAAG,mBACb,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,QAAQ,eAAE,uDAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,SAAD;AAAW,EAAA,KAAK,MAAhB;AAAiB,EAAA,IAAI,EAAC,QAAtB;AAA+B,EAAA,SAAS,EAAEb,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,SAAD;AAAW,EAAA,KAAK,MAAhB;AAAiB,EAAA,IAAI,EAAC,OAAtB;AAA8B,EAAA,SAAS,EAAEC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,CADF,CADF;;AAcA,eAAeY,MAAf","sourcesContent":["import React, { Suspense, lazy } from 'react';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport ErrorComponent from './Common/Components/ErrorComponent';\r\n\r\nconst Login = lazy(() => import(/* webpackChunkName: \"Login\" */ './Login'));\r\n\r\nconst Home = lazy(() => import(/* webpackChunkName: \"Home\" */ './Home'));\r\n\r\n// const NoMatch = lazy(() => import('./NoMatch'));\r\n\r\nexport const checkUserLoggedIn = () => !!localStorage.getItem('userData');\r\n\r\nconst AuthRoute = ({ component: Component, allowedFor = [], ...rest }) => {\r\n  console.log(checkUserLoggedIn());\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        checkUserLoggedIn() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <ErrorComponent errorMessage=\"Access denied\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n/* Using HashRouter because GitHub Pages doesn’t support routers \r\nthat use the HTML5 `pushState` history API under the hood \r\n(for example, React Router using `browserHistory`) so if you refresh the \r\nBrowser Page it gives a 404 Error page. \r\nThis is because when there is a fresh page load for a url like \r\n`http://user.github.io/todomvc/todos/42`, where `/todos/42` is a frontend route, \r\nthe GitHub Pages server returns 404 because it knows nothing of `/todos/42`.\r\n*/\r\nconst Routes = () => (\r\n  <HashRouter>\r\n    <Suspense fallback={<>Loading...</>}>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n        <AuthRoute exact path=\"/login\" component={Login} />\r\n        <AuthRoute exact path=\"/home\" component={Home} />\r\n\r\n        {/* <Route component={NoMatch} /> */}\r\n      </Switch>\r\n    </Suspense>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Routes;\r\n"]},"metadata":{},"sourceType":"module"}