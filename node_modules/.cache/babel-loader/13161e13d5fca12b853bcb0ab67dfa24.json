{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Home\\\\Components\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport { toNumber } from 'lodash';\nimport { Card, Grid, Button, TextField, Typography, CardContent } from '@material-ui/core';\nimport { searchAllPlanets, hitPlanetSearchUrl } from '../../SWAPI';\n\nconst Home = () => {\n  let history = useHistory();\n  const signal = axios.CancelToken.source();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchData, setSearchData] = useState({});\n  const [error, setError] = useState(false);\n  const [isLoggingOut, setLoggingOut] = useState(false);\n  useEffect(() => {\n    document.title = `Login | Swapi App`;\n    return () => {\n      signal.cancel('Request Cancelled');\n    };\n  }, []);\n\n  const processData = data => {\n    const results = orderBy(data.results, [o => {\n      if (toNumber(o.population) && !isNaN(toNumber(o.population))) return o.user;\n    }], ['desc']);\n    console.log({\n      results\n    });\n    return { ...data,\n      results\n    };\n  };\n\n  const checkLogin = async searchValue => {\n    try {\n      const response = await searchAllPlanets(searchValue, signal.token);\n      console.log(response);\n\n      if (response && response.count > 0) {\n        console.log('Search Successful', response.results);\n        const data = processData(response);\n        setSearchData({ ...data\n        });\n      } else {\n        setError(true);\n        setSearchData({});\n      }\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    checkLogin(e.target.value);\n  };\n\n  const handleLogout = () => {\n    localStorage.clear();\n    history.push('/login');\n  };\n\n  const hitUrl = async url => {\n    try {\n      const response = await hitPlanetSearchUrl(url, signal.token);\n      console.log(response);\n\n      if (response && response.count > 0) {\n        const data = processData(response);\n        setSearchData({ ...data\n        });\n      } else {\n        setError(true);\n        setSearchData([]);\n      }\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handlePagination = url => {\n    hitUrl(url);\n  };\n\n  console.log(searchData);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"search\",\n    id: \"standard-search\",\n    label: \"Search Field\",\n    placeholder: \"Type to Search\",\n    name: \"Search Field\",\n    fullWidth: true,\n    value: searchValue,\n    onChange: handleSearch,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleLogout,\n    disabled: isLoggingOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Logout\")), searchData.results && searchData.results.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, map(searchData.results, (data, idx) => /*#__PURE__*/React.createElement(Grid, {\n    key: idx + 1,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      width: '200px',\n      height: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, data.name))))), (searchData.previous || searchData.next) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handlePagination(searchData.previous),\n    disabled: !searchData.previous,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handlePagination(searchData.next),\n    disabled: !searchData.next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Next\"))) : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"No Search Results\")));\n};\n\nexport default Home;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Home/Components/Home.js"],"names":["React","useState","useEffect","axios","useHistory","map","orderBy","toNumber","Card","Grid","Button","TextField","Typography","CardContent","searchAllPlanets","hitPlanetSearchUrl","Home","history","signal","CancelToken","source","searchValue","setSearchValue","searchData","setSearchData","error","setError","isLoggingOut","setLoggingOut","document","title","cancel","processData","data","results","o","population","isNaN","user","console","log","checkLogin","response","token","count","handleSearch","e","target","value","handleLogout","localStorage","clear","push","hitUrl","url","handlePagination","shrink","length","idx","width","height","name","previous","next"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport map from 'lodash/map';\r\nimport orderBy from 'lodash/orderBy';\r\nimport { toNumber } from 'lodash';\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  CardContent,\r\n} from '@material-ui/core';\r\nimport { searchAllPlanets, hitPlanetSearchUrl } from '../../SWAPI';\r\n\r\nconst Home = () => {\r\n  let history = useHistory();\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [isLoggingOut, setLoggingOut] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    return () => {\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const processData = (data) => {\r\n    const results = orderBy(\r\n      data.results,\r\n      [\r\n        (o) => {\r\n          if (toNumber(o.population) && !isNaN(toNumber(o.population)))\r\n            return o.user;\r\n        },\r\n      ],\r\n      ['desc']\r\n    );\r\n    console.log({ results });\r\n    return { ...data, results };\r\n  };\r\n\r\n  const checkLogin = async (searchValue) => {\r\n    try {\r\n      const response = await searchAllPlanets(searchValue, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        const data = processData(response);\r\n        setSearchData({ ...data });\r\n      } else {\r\n        setError(true);\r\n        setSearchData({});\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchValue(e.target.value);\r\n    checkLogin(e.target.value);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    history.push('/login');\r\n  };\r\n\r\n  const hitUrl = async (url) => {\r\n    try {\r\n      const response = await hitPlanetSearchUrl(url, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        const data = processData(response);\r\n        setSearchData({ ...data });\r\n      } else {\r\n        setError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handlePagination = (url) => {\r\n    hitUrl(url);\r\n  };\r\n\r\n  console.log(searchData);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={10}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleLogout}\r\n            disabled={isLoggingOut}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Grid>\r\n        {searchData.results && searchData.results.length > 0 ? (\r\n          <>\r\n            {map(searchData.results, (data, idx) => (\r\n              <Grid key={idx + 1} item>\r\n                <Card\r\n                  variant=\"outlined\"\r\n                  style={{ width: '200px', height: '200px' }}\r\n                >\r\n                  <CardContent>\r\n                    <Typography>{data.name}</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {(searchData.previous || searchData.next) && (\r\n              <>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handlePagination(searchData.previous)}\r\n                  disabled={!searchData.previous}\r\n                >\r\n                  Prev\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handlePagination(searchData.next)}\r\n                  disabled={!searchData.next}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Typography>No Search Results</Typography>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}