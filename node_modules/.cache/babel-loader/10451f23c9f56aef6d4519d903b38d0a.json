{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Login\\\\Components\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport keys from 'lodash/keys';\nimport { Box, Grid, Button, TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { USERNAME, PASSWORD } from '../Constants/Login_Constants';\nimport { getAllPeople } from '../../SWAPI';\n\nconst Login = () => {\n  const signal = axios.CancelToken.source();\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [isLoggingIn, setLoggingIn] = useState(false);\n  const [loginData, setLoginData] = useState({\n    [USERNAME]: '',\n    [PASSWORD]: ''\n  });\n  useEffect(() => {\n    document.title = `Login | Swapi App`;\n    return () => {\n      signal.cancel('Request Cancelled');\n    };\n  }, []);\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisibility(prevStateValue => {\n      return !prevStateValue;\n    });\n  };\n\n  const handleChange = name => e => {\n    setErrors(prevErrors => {\n      delete prevErrors[name];\n      return { ...prevErrors\n      };\n    });\n    setLoginData({ ...loginData,\n      [name]: e.target.value\n    });\n  };\n\n  const checkFormValidity = (data, existingErrors) => {\n    const REQUIRED_FIELD = 'Required Field';\n    const errors = existingErrors;\n    if (!data[USERNAME]) errors[USERNAME] = REQUIRED_FIELD;\n    if (!data[PASSWORD]) errors[PASSWORD] = REQUIRED_FIELD;\n    return errors;\n  };\n\n  const fetchAllPeople = async () => {\n    try {\n      const response = await getAllPeople(loginData[USERNAME], signal.token);\n      console.log(response);\n\n      if (response.status === 200) {}\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handleLogin = () => {\n    console.log('Login'); // setErrors(checkFormValidity(loginData, errors));\n\n    console.log(errors);\n    console.log('Here1');\n\n    if (keys(errors).length === 0) {\n      console.log('Here2');\n      fetchAllPeople();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"username\",\n    id: \"username\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    name: \"Username\",\n    fullWidth: true,\n    value: loginData[USERNAME],\n    onChange: handleChange(USERNAME),\n    disabled: isLoggingIn,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    error: !!errors[USERNAME],\n    helperText: errors[USERNAME],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: passwordVisibility ? 'text' : 'password',\n    id: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    fullWidth: true,\n    value: loginData[PASSWORD],\n    onChange: handleChange(PASSWORD),\n    disabled: isLoggingIn,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    error: !!errors[PASSWORD],\n    helperText: errors[PASSWORD],\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"Toggle password visibility\",\n        onClick: () => handlePasswordVisibility(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, passwordVisibility ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 43\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 60\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Login/Components/Login.js"],"names":["React","useState","useEffect","axios","keys","Box","Grid","Button","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","USERNAME","PASSWORD","getAllPeople","Login","signal","CancelToken","source","passwordVisibility","setPasswordVisibility","errors","setErrors","isLoggingIn","setLoggingIn","loginData","setLoginData","document","title","cancel","handlePasswordVisibility","prevStateValue","handleChange","name","e","prevErrors","target","value","checkFormValidity","data","existingErrors","REQUIRED_FIELD","fetchAllPeople","response","token","console","log","status","error","handleLogin","length","position","left","top","transform","shrink","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport keys from 'lodash/keys';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { USERNAME, PASSWORD } from '../Constants/Login_Constants';\r\nimport { getAllPeople } from '../../SWAPI';\r\n\r\nconst Login = () => {\r\n  const signal = axios.CancelToken.source();\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoggingIn, setLoggingIn] = useState(false);\r\n  const [loginData, setLoginData] = useState({\r\n    [USERNAME]: '',\r\n    [PASSWORD]: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    return () => {\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const handlePasswordVisibility = () => {\r\n    setPasswordVisibility((prevStateValue) => {\r\n      return !prevStateValue;\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setErrors((prevErrors) => {\r\n      delete prevErrors[name];\r\n      return { ...prevErrors };\r\n    });\r\n    setLoginData({ ...loginData, [name]: e.target.value });\r\n  };\r\n\r\n  const checkFormValidity = (data, existingErrors) => {\r\n    const REQUIRED_FIELD = 'Required Field';\r\n    const errors = existingErrors;\r\n    if (!data[USERNAME]) errors[USERNAME] = REQUIRED_FIELD;\r\n    if (!data[PASSWORD]) errors[PASSWORD] = REQUIRED_FIELD;\r\n    return errors;\r\n  };\r\n\r\n  const fetchAllPeople = async () => {\r\n    try {\r\n      const response = await getAllPeople(loginData[USERNAME], signal.token);\r\n      console.log(response);\r\n      if (response.status === 200) {\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    console.log('Login');\r\n    // setErrors(checkFormValidity(loginData, errors));\r\n    console.log(errors);\r\n    console.log('Here1');\r\n    if (keys(errors).length === 0) {\r\n      console.log('Here2');\r\n      fetchAllPeople();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"username\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            placeholder=\"Username\"\r\n            name=\"Username\"\r\n            fullWidth\r\n            value={loginData[USERNAME]}\r\n            onChange={handleChange(USERNAME)}\r\n            disabled={isLoggingIn}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            error={!!errors[USERNAME]}\r\n            helperText={errors[USERNAME]}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type={passwordVisibility ? 'text' : 'password'}\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            value={loginData[PASSWORD]}\r\n            onChange={handleChange(PASSWORD)}\r\n            disabled={isLoggingIn}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            error={!!errors[PASSWORD]}\r\n            helperText={errors[PASSWORD]}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"Toggle password visibility\"\r\n                    onClick={() => handlePasswordVisibility()}\r\n                  >\r\n                    {passwordVisibility ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}