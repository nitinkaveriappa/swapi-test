{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\swapi-test\\\\src\\\\Home\\\\Components\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport map from 'lodash/map';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport { Grid, TextField } from '@material-ui/core';\nimport { searchAllPlanets } from '../../SWAPI';\nam4core.useTheme(am4themesAnimated);\n\nconst Home = () => {\n  const signal = axios.CancelToken.source();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchData, setSearchData] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    document.title = `Login | Swapi App`;\n    loadChart();\n    return () => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n\n      signal.cancel('Request Cancelled');\n    };\n  }, []);\n\n  const loadChart = (chartData = []) => {\n    // if (chartData.length) {\n    if (true) {\n      const chart = am4core.create('planets', am4charts.TreeMap);\n      chart.hiddenState.properties.opacity = 0; // Add data\n\n      chart.data = [{\n        name: 'First',\n        children: [{\n          name: 'A1',\n          value: 100\n        }, {\n          name: 'A2',\n          value: 60\n        }, {\n          name: 'A3',\n          value: 30\n        }]\n      }, {\n        name: 'Second',\n        children: [{\n          name: 'B1',\n          value: 135\n        }, {\n          name: 'B2',\n          value: 98\n        }, {\n          name: 'B3',\n          value: 56\n        }]\n      }, {\n        name: 'Third',\n        children: [{\n          name: 'C1',\n          value: 335\n        }, {\n          name: 'C2',\n          value: 148\n        }, {\n          name: 'C3',\n          value: 126\n        }, {\n          name: 'C4',\n          value: 26\n        }]\n      }, {\n        name: 'Fourth',\n        children: [{\n          name: 'D1',\n          value: 415\n        }, {\n          name: 'D2',\n          value: 148\n        }, {\n          name: 'D3',\n          value: 89\n        }, {\n          name: 'D4',\n          value: 64\n        }, {\n          name: 'D5',\n          value: 16\n        }]\n      }, {\n        name: 'Fifth',\n        children: [{\n          name: 'E1',\n          value: 687\n        }, {\n          name: 'E2',\n          value: 148\n        }]\n      }];\n      chart.colors.step = 2;\n      chart.dataFields.value = 'value';\n      chart.dataFields.name = 'name';\n      chart.dataFields.children = 'children';\n      chart.layoutAlgorithm = chart.binaryTree;\n      chart.zoomable = false;\n      const bgColor = new am4core.InterfaceColorSet().getFor('background');\n      const level0SeriesTemplate = chart.seriesTemplates.create('0');\n      const level0ColumnTemplate = level0SeriesTemplate.columns.template;\n      level0ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\n      level0ColumnTemplate.fillOpacity = 0;\n      level0ColumnTemplate.strokeWidth = 0;\n      level0ColumnTemplate.strokeOpacity = 0; // level 1 series template\n\n      const level1SeriesTemplate = chart.seriesTemplates.create('1');\n      const level1ColumnTemplate = level1SeriesTemplate.columns.template;\n      level1SeriesTemplate.tooltip.animationDuration = 0;\n      level1SeriesTemplate.strokeOpacity = 1; //   level1ColumnTemplate.tooltipText = `${i18n.label(\n      //     'dash.causeCategory',\n      //     'Cause Cateogry'\n      //   )}: {parentName}\n      // ${i18n.label('dash.causeDescription', 'Cause Description')}: {name}\n      // ${i18n.label('dash.count', 'Count')}: {value}`;\n\n      level1ColumnTemplate.tooltipText = `Blah Blah`;\n      level1ColumnTemplate.column.cornerRadius(0);\n      level1ColumnTemplate.fillOpacity = 1;\n      level1ColumnTemplate.strokeWidth = 4;\n      level1ColumnTemplate.stroke = bgColor;\n      const bullet1 = level1SeriesTemplate.bullets.push(new am4charts.LabelBullet());\n      bullet1.locationY = 0.5;\n      bullet1.locationX = 0.5;\n      bullet1.label.text = `{name}`;\n      bullet1.label.fill = bgColor;\n      chart.maxLevels = 2;\n      level1ColumnTemplate.events.on('hit', event => {\n        const chartBlockData = event.target.dataItem.treeMapDataItem.dataContext;\n        this.handleClick(chartBlockData);\n      });\n      bullet1.events.on('hit', event => {\n        const chartBlockData = event.target.dataItem.treeMapDataItem.dataContext;\n        this.handleClick(chartBlockData);\n      });\n      chart.legend = new am4charts.Legend();\n    }\n  };\n\n  const checkLogin = async searchValue => {\n    try {\n      const response = await searchAllPlanets(searchValue, signal.token);\n      console.log(response);\n\n      if (response && response.count > 0) {\n        console.log('Search Successful', response.results);\n        setSearchData([...response.results]);\n      } else {\n        setError(true);\n        setSearchData([]);\n      }\n    } catch (error) {\n      console.log('API Error', error);\n    }\n  };\n\n  const handleSearch = e => {\n    setSearchValue(e.target.value);\n    checkLogin(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"search\",\n    id: \"standard-search\",\n    label: \"Search Field\",\n    placeholder: \"Type to Search\",\n    name: \"Search Field\",\n    fullWidth: true,\n    value: searchValue,\n    onChange: handleSearch,\n    required: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, map(searchData, data => /*#__PURE__*/React.createElement(React.Fragment, null, data.name, \"\\xA0\")))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"planets\",\n    style: //   searchData.length === 0\n    //     ? { display: 'none' }\n    //     :\n    {\n      width: '100%',\n      height: '1000px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["E:/GitHub/swapi-test/src/Home/Components/Home.js"],"names":["React","useState","useEffect","axios","map","am4core","am4charts","am4themesAnimated","Grid","TextField","searchAllPlanets","useTheme","Home","signal","CancelToken","source","searchValue","setSearchValue","searchData","setSearchData","error","setError","document","title","loadChart","chart","dispose","cancel","chartData","create","TreeMap","hiddenState","properties","opacity","data","name","children","value","colors","step","dataFields","layoutAlgorithm","binaryTree","zoomable","bgColor","InterfaceColorSet","getFor","level0SeriesTemplate","seriesTemplates","level0ColumnTemplate","columns","template","column","cornerRadius","fillOpacity","strokeWidth","strokeOpacity","level1SeriesTemplate","level1ColumnTemplate","tooltip","animationDuration","tooltipText","stroke","bullet1","bullets","push","LabelBullet","locationY","locationX","label","text","fill","maxLevels","events","on","event","chartBlockData","target","dataItem","treeMapDataItem","dataContext","handleClick","legend","Legend","checkLogin","response","token","console","log","count","results","handleSearch","e","shrink","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport map from 'lodash/map';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { searchAllPlanets } from '../../SWAPI';\r\n\r\nam4core.useTheme(am4themesAnimated);\r\n\r\nconst Home = () => {\r\n  const signal = axios.CancelToken.source();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = `Login | Swapi App`;\r\n    loadChart();\r\n    return () => {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const loadChart = (chartData = []) => {\r\n    // if (chartData.length) {\r\n    if (true) {\r\n      const chart = am4core.create('planets', am4charts.TreeMap);\r\n      chart.hiddenState.properties.opacity = 0;\r\n\r\n      // Add data\r\n      chart.data = [\r\n        {\r\n          name: 'First',\r\n          children: [\r\n            {\r\n              name: 'A1',\r\n              value: 100,\r\n            },\r\n            {\r\n              name: 'A2',\r\n              value: 60,\r\n            },\r\n            {\r\n              name: 'A3',\r\n              value: 30,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: 'Second',\r\n          children: [\r\n            {\r\n              name: 'B1',\r\n              value: 135,\r\n            },\r\n            {\r\n              name: 'B2',\r\n              value: 98,\r\n            },\r\n            {\r\n              name: 'B3',\r\n              value: 56,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: 'Third',\r\n          children: [\r\n            {\r\n              name: 'C1',\r\n              value: 335,\r\n            },\r\n            {\r\n              name: 'C2',\r\n              value: 148,\r\n            },\r\n            {\r\n              name: 'C3',\r\n              value: 126,\r\n            },\r\n            {\r\n              name: 'C4',\r\n              value: 26,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: 'Fourth',\r\n          children: [\r\n            {\r\n              name: 'D1',\r\n              value: 415,\r\n            },\r\n            {\r\n              name: 'D2',\r\n              value: 148,\r\n            },\r\n            {\r\n              name: 'D3',\r\n              value: 89,\r\n            },\r\n            {\r\n              name: 'D4',\r\n              value: 64,\r\n            },\r\n            {\r\n              name: 'D5',\r\n              value: 16,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: 'Fifth',\r\n          children: [\r\n            {\r\n              name: 'E1',\r\n              value: 687,\r\n            },\r\n            {\r\n              name: 'E2',\r\n              value: 148,\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n\r\n      chart.colors.step = 2;\r\n\r\n      chart.dataFields.value = 'value';\r\n      chart.dataFields.name = 'name';\r\n      chart.dataFields.children = 'children';\r\n      chart.layoutAlgorithm = chart.binaryTree;\r\n\r\n      chart.zoomable = false;\r\n\r\n      const bgColor = new am4core.InterfaceColorSet().getFor('background');\r\n\r\n      const level0SeriesTemplate = chart.seriesTemplates.create('0');\r\n      const level0ColumnTemplate = level0SeriesTemplate.columns.template;\r\n\r\n      level0ColumnTemplate.column.cornerRadius(10, 10, 10, 10);\r\n      level0ColumnTemplate.fillOpacity = 0;\r\n      level0ColumnTemplate.strokeWidth = 0;\r\n      level0ColumnTemplate.strokeOpacity = 0;\r\n\r\n      // level 1 series template\r\n      const level1SeriesTemplate = chart.seriesTemplates.create('1');\r\n      const level1ColumnTemplate = level1SeriesTemplate.columns.template;\r\n\r\n      level1SeriesTemplate.tooltip.animationDuration = 0;\r\n      level1SeriesTemplate.strokeOpacity = 1;\r\n\r\n      //   level1ColumnTemplate.tooltipText = `${i18n.label(\r\n      //     'dash.causeCategory',\r\n      //     'Cause Cateogry'\r\n      //   )}: {parentName}\r\n      // ${i18n.label('dash.causeDescription', 'Cause Description')}: {name}\r\n      // ${i18n.label('dash.count', 'Count')}: {value}`;\r\n      level1ColumnTemplate.tooltipText = `Blah Blah`;\r\n      level1ColumnTemplate.column.cornerRadius(0);\r\n      level1ColumnTemplate.fillOpacity = 1;\r\n      level1ColumnTemplate.strokeWidth = 4;\r\n      level1ColumnTemplate.stroke = bgColor;\r\n\r\n      const bullet1 = level1SeriesTemplate.bullets.push(\r\n        new am4charts.LabelBullet()\r\n      );\r\n      bullet1.locationY = 0.5;\r\n      bullet1.locationX = 0.5;\r\n      bullet1.label.text = `{name}`;\r\n      bullet1.label.fill = bgColor;\r\n\r\n      chart.maxLevels = 2;\r\n\r\n      level1ColumnTemplate.events.on('hit', (event) => {\r\n        const chartBlockData =\r\n          event.target.dataItem.treeMapDataItem.dataContext;\r\n        this.handleClick(chartBlockData);\r\n      });\r\n\r\n      bullet1.events.on('hit', (event) => {\r\n        const chartBlockData =\r\n          event.target.dataItem.treeMapDataItem.dataContext;\r\n        this.handleClick(chartBlockData);\r\n      });\r\n\r\n      chart.legend = new am4charts.Legend();\r\n    }\r\n  };\r\n\r\n  const checkLogin = async (searchValue) => {\r\n    try {\r\n      const response = await searchAllPlanets(searchValue, signal.token);\r\n      console.log(response);\r\n      if (response && response.count > 0) {\r\n        console.log('Search Successful', response.results);\r\n        setSearchData([...response.results]);\r\n      } else {\r\n        setError(true);\r\n        setSearchData([]);\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchValue(e.target.value);\r\n    checkLogin(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12}>\r\n          <TextField\r\n            type=\"search\"\r\n            id=\"standard-search\"\r\n            label=\"Search Field\"\r\n            placeholder=\"Type to Search\"\r\n            name=\"Search Field\"\r\n            fullWidth\r\n            value={searchValue}\r\n            onChange={handleSearch}\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          {map(searchData, (data) => (\r\n            <>{data.name}&nbsp;</>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        id=\"planets\"\r\n        style={\r\n          //   searchData.length === 0\r\n          //     ? { display: 'none' }\r\n          //     :\r\n          { width: '100%', height: '1000px' }\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}